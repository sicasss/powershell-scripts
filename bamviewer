$ErrorActionPreference = "SilentlyContinue"

function Get-Signature {
    [CmdletBinding()]
    param (
        [string[]]$FilePath
    )

    $Existence = Test-Path -PathType "Leaf" -Path $FilePath
    $Authenticode = (Get-AuthenticodeSignature -FilePath $FilePath -ErrorAction SilentlyContinue).Status
    $Signature = "Invalid Signature (UnknownError)"

    if ($Existence) {
        if ($Authenticode -eq "Valid") {
            $Signature = "Valid Signature"
        }
        elseif ($Authenticode -eq "NotSigned") {
            $Signature = "Invalid Signature (NotSigned)"
        }
        elseif ($Authenticode -eq "HashMismatch") {
            $Signature = "Invalid Signature (HashMismatch)"
        }
        elseif ($Authenticode -eq "NotTrusted") {
            $Signature = "Invalid Signature (NotTrusted)"
        }
        elseif ($Authenticode -eq "UnknownError") {
            $Signature = "Invalid Signature (UnknownError)"
        }
        return $Signature
    } else {
        $Signature = "File Was Not Found"
        return $Signature
    }
}

Clear-Host

Write-Host ""
Write-Host ""
Write-Host -ForegroundColor Blue "Forked & Edited by corregir"
Write-Host ""
Write-Host -ForegroundColor Blue " Tranquilo bro, estas en manos de los expertos."
Write-Host ""

Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚†í‚†í‚†í‚†ö‚£≠‚°ü‚†ª‚†ç‚†â‚†â‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†å‚¢≥‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†ò‚°å‚°Ä‚†Ä‚†¥‚†Å‚¢ª‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ü‚††‚†Ä‚°á‚¢∞‚¢õ‚°∂‚°ù‚†Ä‚†Ä‚¢†‚†Ä‚†∏‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†à‚°á‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚£Ä‚°Ü‚†è‚£ª‚£É‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ü‚†Ä‚†ê‚†Ä‚†ê‚†Ä‚°á‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°ó‚†Å‚£†‚£§‚°§‚°Ä‚†Ä‚†ë‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£®‚£§‚£§‚£Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£¥‚£ª‚£ß‚£§‚£º‚£§‚£Ä‚¢Ä‚†Ä‚†Å‚†Ä‚£∞‚£æ‚£ã‚£Ω‚£ø‚¢ø‚£§‚¢ï‚°ò‚°Ü‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚£ø‚¢ü‚°≠‚†ì‚†í‚†©‚£ü‚£ø‚°á‚†Ä‚¢∞‚£ø‚¢ü‚†ç‚†Ç‚†Ä‚†à‚†ô‚£∑‚£∏‚†É‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ø‚°ü‚†Å‚¢∞‚£ø‚£Ø‚°¶‚†à‚£ø‚£ø‚†Ä‚£æ‚£á‚†É‚¢Ä‚£æ‚£•‚£¨‚°Ñ‚†ò‚£ø‚°Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢®‚°á‚°∑‚£§‚°à‚†ª‚†ø‚†É‚¢Ä‚£ø‚£ø‚†Ä‚£ø‚£è‚£á‚†à‚†ª‚†õ‚†ó‚¢Å‚£º‚†ã‚¢∑‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚†Å‚†∏‚¢æ‚£∑‚£¶‚£§‚£¥‚°æ‚†Å‚¢°‚†Ä‚††‚†â‚†´‚£≥‚†¶‚°§‚£æ‚°ø‚†ã‚†Ä‚¢∏‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£Ä‚†Ä‚†Ä‚†à‚†â‚†â‚†Ä‚†Ä‚¢Ä‚†è‚†Ä‚†Ä‚†°‚°Ä‚†Ä‚†â‚†â‚†â‚†Å‚†Ä‚†Ä‚¢∏‚†Ñ‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚°∑‚£ñ‚£∂‚£§‚£§‚£∂‚°Ä‚†ò‚°à‚†Ä‚†Ä‚†Ñ‚†ë‚£∂‚£§‚£Ä‚£Ä‚£§‚£∂‚£æ‚†ü‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢≥‚£∂‚£¥‚£ø‚°ø‚†ã‚£§‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚¢Ä‚†ò‚¢Ø‚£Ω‚£ø‚£ø‚£æ‚†É‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°Ü‚£π‚£ø‚¢§‚°Ä‚£ø‚£ø‚£ø‚£≠‚£Ω‚°ø‚†ü‚¢Ä‚£†‚†¨‚¢õ‚¢π‚°á‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚°è‚¢∏‚¢∏‚†≥‚£ù‚¢∂‚£¨‚£â‚£â‚£†‚£§‚°∂‚¢õ‚†ï‚†Ä‚°Ñ‚°é‚°á‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚¢∏‚†ò‚°å‚†õ‚¢Ø‚†í‚†ã‚†≠‚£≠‚†µ‚†ñ‚†â‚†Ä‚°∞‚°É‚°†‚°á‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚¢ø‚¢†‚°á‚°Ä‚¢§‚†Ä‚†â‚†â‚†ø‚†ü‚†Å‚†Ä‚¢Ä‚°¥‚°á‚†Ä‚†Ä‚¢á‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚°û‚†∏‚°á‚†Ä‚†ê‚†à‚†í‚†§‚†§‚£§‚£§‚£ñ‚†∑‚†Å‚†Ä‚†Ä‚£†‚†ã‚†á‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚£∑‚†Ä‚£á‚†á‚††‚†§‚°Ä‚†Ö‚†ò‚†õ‚¢ª‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°Å‚¢∞‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚°Ä‚°ó‚°¨‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚†Ä‚†Ä‚†Ä‚†∏‚†Ä‚£ø‚†Ä‚†à‚°Ü‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚°á‚°ó‚£å‚¢ò‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚†Ä‚†Ä‚†Ä‚†à‚†Ä‚£ª‚£ß‚†Ä‚¢±‚°Ñ‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚°ü‚£ß‚££‚°á‚†à‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ø‚£ø‚£∑‚£º‚†Å‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚°á‚£ø‚°á‚°á‚†Ä‚°á‚†Ä‚†Ä‚†Ç‚†Ä‚¢†‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚°π‚†Å‚¢∏‚°á‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°ü‚¢ª‚°á‚£∏‚¢ß‚°á‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚¢ò‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚°á‚†Ä‚¢∏‚†Å‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ø‚°é‚£ø‚£ø‚°è‚†Ä‚†Ä‚°á‚†Ä‚†ê‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚†Ä‚†á‚††‚°á‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£π‚°Ü‚¢∫‚£ø‚£á‚¢Ä‚†Ä‚°á‚†Ä‚†à‚†Ä‚†Ä‚†∏‚†ò‚†Ñ‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚£∏‚†Å‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚¢∞‚£ú‚£ø‚£ø‚°ó‚£†‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚¢¢‚†Ä‚†Ä‚†Ä‚¢∏‚¢Ä‚£†‚¢≥‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢ß‚°ª‚£ø‚†Ä‚¢π‚†≤‚°á‚†Ñ‚††‚†Ä‚†Ä‚¢º‚†∏‚†Ä‚†Ä‚†Ä‚°Ω‚£∏‚°ó‚£º‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢≥‚†æ‚†ò‚£ø‚°Ö‚£ø‚†ê‚†Ä‚¢Ä‚†Ä‚£∏‚°É‚†Ä‚¢Ä‚£º‚£∑‚£ã‚†ú‚†É‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢®‚†É‚¢ê‚£ø‚†ô‚£ø‚°ü‚†í‚†ö‚†ö‚†õ‚°∑‚†ñ‚£ø‚°ø‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚†Ä‚°ò‚°è‚†Ä‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚°è‚†É‚¢π‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚¢Ä‚°ü‚£ó‚°É‚¢æ‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†∏‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†É‚†∏‚£ß‚†ø‚†ß‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚¢∞‚°á‚††‚†§‚£ª‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚†Ä‚£º‚¢à‚£ó‚†Ä‚¢ò‚£ø‚†Ä‚†Ä‚†Ä‚¢∏‚£∑‚¢Ä‚£≤‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°è‚†Ä‚¢π‚¢∏‚£ø‚£ø‚†û‚¢π‚†Ä‚†Ä‚†Ä‚¢∏‚°õ‚†ø‚†ü‚°ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚†Ä‚†Ä‚°å‚¢∏‚£è‚°Ü‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚¢∏‚£π‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†è‚†Ä‚†Ä‚°Ö‚†Ä‚£ø‚£Æ‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚¢∏‚£Ø‚†Ä‚¢†‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°æ‚†Å‚†Ä‚†Ä‚°á‚†Ä‚£ø‚£Ø‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚¢∏‚£Ø‚†É‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†á‚¢†‚†Å‚†Ä‚°á‚†Ä‚£ø‚°ß‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚¢∏‚¢ª‚°á‚†à‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚†Ä‚°∫‚†Ä‚†í‚†Ä‚¢†‚†É‚£∞‚£ø‚£ß‚†Ä‚¢∫‚†Ä‚†Ä‚†Ä‚°º‚†Ω‚†ò‚°∞‚¢≥‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ä‚¢†‚†á‚†Ä‚°Ñ‚†Ä‚¢∏‚£§‚£ø‚†É‚†Ä‚†É‚†ò‚°á‚°Ä‚¢∞‚°á‚†Ä‚†Ä‚†±‚†ò‚¢ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚†Ç‚°º‚†Ä‚¢†‚£Ä‚†Ä‚¢∏‚°ü‚†Å‚†Ä‚†Ä‚†Ä‚°Ä‚£Ø‚†Ñ‚¢∏‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†™‚°≥‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚¢∏‚†á‚†Ä‚†à‚†ç‚†Ä‚°à‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚°ø‚†í‚¢ø‚£ø‚†Ü‚†Ä‚†Ä‚†Ä‚¢¢‚†Ä‚†à‚¢≥‚°Ä‚†Ä‚†Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚†Ä‚°æ‚†Ä‚†Ü‚†É‚°Ü‚†Ä‚†É‚°†‚†Ä‚£Ä‚†Ä‚†Ä‚£º‚£è‚†Ä‚†å‚£ø‚£ß‚†Ä‚†Ä‚¢†‚£†‚£ß‚£Ä‚°Ñ‚†ô‚¢ß‚°Ä";
Write-Host -ForegroundColor Brown "‚†Ä‚¢∏‚†É‚†Ä‚†®‚†∏‚†Å‚†Ä‚£Ä‚†ó‚£º‚£ó‚†∂‚¢§‚£ø‚°á‚†Ä‚†Ä‚¢∏‚£ø‚£Ñ‚†§‚†ø‚£∑‚°¨‚†ø‚£Ü‚†ê‚¢¢‚£Ω";
Write-Host -ForegroundColor Brown "‚†Ä‚£æ‚°Ü‚†Ä‚†à‚¢∞‚†Ä‚¢Ä‚°á‚¢†‚£ø‚†É‚†Ä‚¢∞‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚¢ª‚£ß‚†Ä‚†Ä‚†ò‚£∑‚£Ä‚£®‚£∑‚£¨‚°Ø";
Write-Host -ForegroundColor Brown "‚¢Ä‚£á‚†Ä‚†Ä‚¢£‚†ä‚†Ä‚†Ä‚£ø‚£ø‚£á‚††‚†Ñ‚£æ‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚£∑‚£≤‚£û‚°ø‚†û‚†õ‚†â‚†Å‚†Ä";
Write-Host -ForegroundColor Brown "‚£æ‚°á‚†Ñ‚††‚†∏‚°Ä‚†Ä‚¢∏‚£ø‚†π‚¢ª‚£ø‚£ü‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
Write-Host ""

function Test-Admin {
    $currentUser = New-Object Security.Principal.WindowsPrincipal $([Security.Principal.WindowsIdentity]::GetCurrent())
    $currentUser.IsInRole([Security.Principal.WindowsBuiltinRole]::Administrator)
}
if (!(Test-Admin)) {
    Write-Warning "Brother ejecutalo como ADMIN :V"
    Start-Sleep 10
    Exit
}

$sw = [Diagnostics.Stopwatch]::StartNew()

if (!(Get-PSDrive -Name HKLM -PSProvider Registry)){
    Try { New-PSDrive -Name HKLM -PSProvider Registry -Root HKEY_LOCAL_MACHINE }
    Catch { Write-Warning "Error montando HKEY_Local_Machine" }
}

$bv = ("bam", "bam\State")
Try {
    $Users = foreach($ii in $bv){
        Get-ChildItem -Path "HKLM:\SYSTEM\CurrentControlSet\Services\$($ii)\UserSettings\" | Select-Object -ExpandProperty PSChildName
    }
}
Catch {
    Write-Warning "Error Parseando BAM Key. Probablemente no soporta tu version de Windows :("
    Exit
}

# üîπ Correcci√≥n de las rutas SIN comillas mal cerradas
$rpath = @(
    "HKLM:\SYSTEM\CurrentControlSet\Services\bam",
    "HKLM:\SYSTEM\CurrentControlSet\Services\bam\state"
)

$UserTime = (Get-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\TimeZoneInformation").TimeZoneKeyName
$UserBias = (Get-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\TimeZoneInformation").ActiveTimeBias
$UserDay  = (Get-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\TimeZoneInformation").DaylightBias

$Bam = Foreach ($Sid in $Users){
    foreach($rp in $rpath){
        $BamItems = Get-Item -Path "$($rp)\UserSettings\$Sid" -ErrorAction SilentlyContinue | Select-Object -ExpandProperty Property
        Write-Host -ForegroundColor Red "Extracting " -NoNewLine
        Write-Host -ForegroundColor Blue "$($rp)\UserSettings\$SID"

        Try {
            $objSID = New-Object System.Security.Principal.SecurityIdentifier($Sid)
            $User = $objSID.Translate([System.Security.Principal.NTAccount]).Value
        }
        Catch { $User = "" }

        ForEach ($Item in $BamItems){
            $Key = Get-ItemProperty -Path "$($rp)\UserSettings\$Sid" -ErrorAction SilentlyContinue | Select-Object -ExpandProperty $Item
            If ($key.length -eq 24) {
                $Hex = [System.BitConverter]::ToString($key[7..0]) -replace "-",""
                $TimeLocal = Get-Date ([DateTime]::FromFileTime([Convert]::ToInt64($Hex, 16))) -Format "yyyy-MM-dd HH:mm:ss"
                $TimeUTC   = Get-Date ([DateTime]::FromFileTimeUtc([Convert]::ToInt64($Hex, 16))) -Format "yyyy-MM-dd HH:mm:ss"
                $Bias      = -([convert]::ToInt32([Convert]::ToString($UserBias,2),2))
                $Day       = -([convert]::ToInt32([Convert]::ToString($UserDay,2),2)) 
                $TImeUser  = (Get-Date ([DateTime]::FromFileTimeUtc([Convert]::ToInt64($Hex, 16))).addminutes($Bias) -Format "yyyy-MM-dd HH:mm:ss") 
                
                $f = Split-Path -Leaf ($item).TrimStart()
                $path = Join-Path -Path "C:" -ChildPath (($item).Remove(1,23))
                $sig = Get-Signature -FilePath $path

                [PSCustomObject]@{
                    'Tiempo del examinador'                 = $TimeLocal
                    'Tiempo de ultima ejecucion (UTC)'      = $TimeUTC
                    'Tiempo de ultima ejecucion (Usuario)'  = $TimeUser
                    Application                             = $f
                    Path                                   = $path
                    Signature                              = $Sig
                    User                                   = $User
                    SID                                    = $Sid
                    Regpath                                = $rp
                }
            }
        }
    }
}

$Bam | Out-GridView -PassThru -Title "Entradas BAM: $($Bam.count)  - Zona Horaria del Usuario: ($UserTime)"

$sw.stop()
$t = $sw.Elapsed.TotalMinutes
Write-Host ""
Write-Host "Se tardo $t Minutos" -ForegroundColor Yellow
